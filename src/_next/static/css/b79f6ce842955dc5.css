/*! tailwindcss v4.0.4 | MIT License | https://tailwindcss.com */
@layer theme {

    :host,
    :root {
        --color-brand-primary: #D5A021;
        --spacing: .25rem;
        --breakpoint-sm: 40rem;
        --breakpoint-md: 48rem;
        --breakpoint-lg: 64rem;
        --breakpoint-xl: 80rem;
        --breakpoint-2xl: 96rem;
        --container-3xs: 16rem;
        --container-2xs: 18rem;
        --container-xs: 20rem;
        --container-sm: 24rem;
        --container-md: 28rem;
        --container-lg: 32rem;
        --container-xl: 36rem;
        --container-2xl: 42rem;
        --container-3xl: 48rem;
        --container-4xl: 56rem;
        --container-5xl: 64rem;
        --container-6xl: 72rem;
        --container-7xl: 80rem;
        --text-xs: .75rem;
        --text-xs--line-height: calc(1/.75);
        --text-sm: .875rem;
        --text-sm--line-height: calc(1.25/.875);
        --text-base: 1rem;
        --text-base--line-height: calc(1.5/1);
        --text-lg: 1.125rem;
        --text-lg--line-height: calc(1.75/1.125);
        --text-xl: 1.25rem;
        --text-xl--line-height: calc(1.75/1.25);
        --text-2xl: 1.5rem;
        --text-2xl--line-height: calc(2/1.5);
        --text-3xl: 1.875rem;
        --text-3xl--line-height: calc(2.25/1.875);
        --text-4xl: 2.25rem;
        --text-4xl--line-height: calc(2.5/2.25);
        --text-5xl: 3rem;
        --text-5xl--line-height: 1;
        --text-6xl: 3.75rem;
        --text-6xl--line-height: 1;
        --text-7xl: 4.5rem;
        --text-7xl--line-height: 1;
        --text-8xl: 6rem;
        --text-8xl--line-height: 1;
        --text-9xl: 8rem;
        --text-9xl--line-height: 1;
        --tracking-tighter: -.05em;
        --tracking-tight: -.025em;
        --tracking-normal: 0em;
        --tracking-wide: .025em;
        --tracking-wider: .05em;
        --tracking-widest: .1em;
        --leading-tight: 1.25;
        --leading-snug: 1.375;
        --leading-normal: 1.5;
        --leading-relaxed: 1.625;
        --leading-loose: 2;
        --radius-xs: .125rem;
        --radius-sm: .25rem;
        --radius-md: .375rem;
        --radius-lg: .5rem;
        --radius-xl: .75rem;
        --radius-2xl: 1rem;
        --radius-3xl: 1.5rem;
        --radius-4xl: 2rem;
        --shadow-2xs: 0 1px #0000000d;
        --shadow-xs: 0 1px 2px 0 #0000000d;
        --shadow-sm: 0 1px 3px 0 #0000001a, 0 1px 2px -1px #0000001a;
        --shadow-md: 0 4px 6px -1px #0000001a, 0 2px 4px -2px #0000001a;
        --shadow-lg: 0 10px 15px -3px #0000001a, 0 4px 6px -4px #0000001a;
        --shadow-xl: 0 20px 25px -5px #0000001a, 0 8px 10px -6px #0000001a;
        --shadow-2xl: 0 25px 50px -12px #00000040;
        --inset-shadow-2xs: inset 0 1px #0000000d;
        --inset-shadow-xs: inset 0 1px 1px #0000000d;
        --inset-shadow-sm: inset 0 2px 4px #0000000d;
        --drop-shadow-xs: 0 1px 1px #0000000d;
        --drop-shadow-sm: 0 1px 2px #00000026;
        --drop-shadow-md: 0 3px 3px #0000001f;
        --drop-shadow-lg: 0 4px 4px #00000026;
        --drop-shadow-xl: 0 9px 7px #0000001a;
        --drop-shadow-2xl: 0 25px 25px #00000026;
        --ease-in: cubic-bezier(.4, 0, 1, 1);
        --ease-out: cubic-bezier(0, 0, .2, 1);
        --ease-in-out: cubic-bezier(.4, 0, .2, 1);
        --animate-spin: spin 1s linear infinite;
        --animate-ping: ping 1s cubic-bezier(0, 0, .2, 1)infinite;
        --animate-pulse: pulse 2s cubic-bezier(.4, 0, .6, 1)infinite;
        --animate-bounce: bounce 1s infinite;
        --blur-xs: 4px;
        --blur-sm: 8px;
        --blur-md: 12px;
        --blur-lg: 16px;
        --blur-xl: 24px;
        --blur-2xl: 40px;
        --blur-3xl: 64px;
        --perspective-dramatic: 100px;
        --perspective-near: 300px;
        --perspective-normal: 500px;
        --perspective-midrange: 800px;
        --perspective-distant: 1200px;
        --aspect-video: 16/9;
        --default-transition-duration: .15s;
        --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
        --default-font-family: Manrope, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, sans-serif;
        --default-font-feature-settings: normal;
        --default-font-variation-settings: normal;
        --default-mono-font-family: DM Mono, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;
        --default-mono-font-feature-settings: normal;
        --default-mono-font-variation-settings: normal
    }
}

@layer base {

    *,
    ::backdrop,
    :after,
    :before {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0
    }

    ::file-selector-button {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0
    }

    :host,
    html {
        -webkit-text-size-adjust: 100%;
        tab-size: 4;
        line-height: 1.5;
        font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
        font-feature-settings: var(--default-font-feature-settings, normal);
        font-variation-settings: var(--default-font-variation-settings, normal);
        -webkit-tap-highlight-color: transparent
    }

    body {
        line-height: inherit
    }

    hr {
        height: 0;
        color: inherit;
        border-top-width: 1px
    }

    abbr:where([title]) {
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        font-size: inherit;
        font-weight: inherit
    }

    a {
        color: inherit;
        -webkit-text-decoration: inherit;
        text-decoration: inherit
    }

    b,
    strong {
        font-weight: bolder
    }

    code,
    kbd,
    pre,
    samp {
        font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
        font-feature-settings: var(--default-mono-font-feature-settings, normal);
        font-variation-settings: var(--default-mono-font-variation-settings, normal);
        font-size: 1em
    }

    small {
        font-size: 80%
    }

    sub,
    sup {
        vertical-align: baseline;
        font-size: 75%;
        line-height: 0;
        position: relative
    }

    sub {
        bottom: -.25em
    }

    sup {
        top: -.5em
    }

    table {
        text-indent: 0;
        border-color: inherit;
        border-collapse: collapse
    }

    :-moz-focusring {
        outline: auto
    }

    progress {
        vertical-align: baseline
    }

    summary {
        display: list-item
    }

    menu,
    ol,
    ul {
        list-style: none
    }

    audio,
    canvas,
    embed,
    iframe,
    img,
    object,
    svg,
    video {
        vertical-align: middle;
        display: block
    }

    img,
    video {
        max-width: 100%;
        height: auto
    }

    button,
    input,
    optgroup,
    select,
    textarea {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0
    }

    ::file-selector-button {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0
    }

    :where(select:is([multiple], [size])) optgroup {
        font-weight: bolder
    }

    :where(select:is([multiple], [size])) optgroup option {
        padding-inline-start: 20px
    }

    ::file-selector-button {
        margin-inline-end: 4px
    }

    ::placeholder {
        opacity: 1;
        color: color-mix(in oklab, currentColor 50%, transparent)
    }

    textarea {
        resize: vertical
    }

    ::-webkit-search-decoration {
        -webkit-appearance: none
    }

    ::-webkit-date-and-time-value {
        min-height: 1lh;
        text-align: inherit
    }

    ::-webkit-datetime-edit {
        display: inline-flex
    }

    ::-webkit-datetime-edit-fields-wrapper {
        padding: 0
    }

    ::-webkit-datetime-edit,
    ::-webkit-datetime-edit-year-field {
        padding-block: 0
    }

    ::-webkit-datetime-edit-day-field,
    ::-webkit-datetime-edit-month-field {
        padding-block: 0
    }

    ::-webkit-datetime-edit-hour-field,
    ::-webkit-datetime-edit-minute-field {
        padding-block: 0
    }

    ::-webkit-datetime-edit-millisecond-field,
    ::-webkit-datetime-edit-second-field {
        padding-block: 0
    }

    ::-webkit-datetime-edit-meridiem-field {
        padding-block: 0
    }

    :-moz-ui-invalid {
        box-shadow: none
    }

    button,
    input:where([type=button], [type=reset], [type=submit]) {
        appearance: button
    }

    ::file-selector-button {
        appearance: button
    }

    ::-webkit-inner-spin-button,
    ::-webkit-outer-spin-button {
        height: auto
    }

    [hidden]:where(:not([hidden=until-found])) {
        display: none !important
    }

    *,
    ::backdrop,
    :after,
    :before {
        border-color: var(--color-gray-200, currentColor)
    }

    ::file-selector-button {
        border-color: var(--color-gray-200, currentColor)
    }

    html {
        scrollbar-gutter: stable;
        overflow-y: scroll
    }

    ::-webkit-scrollbar {
        width: 0
    }

    html {
        scrollbar-width: none
    }

    video {
        border-radius: var(--radius-md)
    }

    @media (hover:hover) {
        video:hover {
            outline-style: var(--tw-outline-style);
            outline-width: 1px;
            outline-color: var(--color-brand-primary)
        }
    }

    :focus-visible {
        --tw-ring-shadow: var(--tw-ring-inset, )0 0 0 calc(2px + var(--tw-ring-offset-width))var(--tw-ring-color, currentColor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        --tw-ring-color: var(--color-brand-primary);
        --tw-ring-offset-width: 2px;
        --tw-ring-offset-shadow: var(--tw-ring-inset, )0 0 0 var(--tw-ring-offset-width)var(--tw-ring-offset-color);
        outline-style: none
    }

    @media (forced-colors:active) {
        :focus-visible {
            outline-offset: 2px;
            outline: 2px solid #0000
        }
    }

    :root {
        --color-bg-default: #fff;
        --color-bg-surface: #f8f8f6;
        --color-bg-surface-secondary: #fff;
        --color-text-primary: #27272a;
        --color-text-secondary: #65656c;
        --color-text-accent: var(--color-brand-primary);
        --color-text-link: var(--color-brand-primary);
        --color-icon-primary: #27272a;
        --color-icon-secondary: #65656c;
        --color-icon-accent: var(--color-brand-primary);
        --color-border-card: #f2f2f3;
        --color-border-card-hover: #e5e5e6;
        --color-ui-decoration: #e5e5e6
    }

    :root[data-theme=dark] {
        --color-bg-default: #19191a;
        --color-bg-surface: #27272a;
        --color-bg-surface-secondary: #19191a;
        --color-text-primary: #fafafa;
        --color-text-secondary: #f2f2f3;
        --color-text-accent: var(--color-brand-primary);
        --color-text-link: var(--color-brand-primary);
        --color-icon-primary: #fafafa;
        --color-icon-secondary: #f2f2f3;
        --color-icon-accent: var(--color-brand-primary);
        --color-border-card: #27272a;
        --color-border-card-hover: #65656c;
        --color-ui-decoration: #65656c
    }

    :root[data-theme=light] {
        --color-bg-default: #fff;
        --color-bg-surface: #f8f8f6;
        --color-bg-surface-secondary: #fff;
        --color-text-primary: #27272a;
        --color-text-secondary: #65656c;
        --color-text-accent: var(--color-brand-primary);
        --color-text-link: var(--color-brand-primary);
        --color-icon-primary: #27272a;
        --color-icon-secondary: #65656c;
        --color-icon-accent: var(--color-brand-primary);
        --color-border-card: #f2f2f3;
        --color-border-card-hover: #e5e5e6;
        --color-ui-decoration: #e5e5e6
    }
}

@layer components;

@layer utilities {
    .absolute {
        position: absolute
    }

    .fixed {
        position: fixed
    }

    .relative {
        position: relative
    }

    .inset-0 {
        inset: calc(var(--spacing)*0)
    }

    .-top-19 {
        top: calc(var(--spacing)*-19)
    }

    .top-0 {
        top: calc(var(--spacing)*0)
    }

    .top-4 {
        top: calc(var(--spacing)*4)
    }

    .top-7 {
        top: calc(var(--spacing)*7)
    }

    .top-10 {
        top: calc(var(--spacing)*10)
    }

    .-right-5 {
        right: calc(var(--spacing)*-5)
    }

    .-right-24 {
        right: calc(var(--spacing)*-24)
    }

    .right-0 {
        right: calc(var(--spacing)*0)
    }

    .-bottom-1 {
        bottom: calc(var(--spacing)*-1)
    }

    .bottom-4 {
        bottom: calc(var(--spacing)*4)
    }

    .-left-2 {
        left: calc(var(--spacing)*-2)
    }

    .-left-32 {
        left: calc(var(--spacing)*-32)
    }

    .left-0 {
        left: calc(var(--spacing)*0)
    }

    .left-1\/2 {
        left: 50%
    }

    .left-8 {
        left: calc(var(--spacing)*8)
    }

    .-z-10 {
        z-index: calc(10*-1)
    }

    .z-0 {
        z-index: 0
    }

    .z-1 {
        z-index: 1
    }

    .z-10 {
        z-index: 10
    }

    .z-50 {
        z-index: 50
    }

    .col-span-1 {
        grid-column: span 1/span 1
    }

    .col-span-2 {
        grid-column: span 2/span 2
    }

    .row-span-1 {
        grid-row: span 1/span 1
    }

    .row-span-2 {
        grid-row: span 2/span 2
    }

    .container {
        width: 100%
    }

    @media (width>=375px) {
        .container {
            max-width: 375px
        }
    }

    @media (width>=40rem) {
        .container {
            max-width: 40rem
        }
    }

    @media (width>=48rem) {
        .container {
            max-width: 48rem
        }
    }

    @media (width>=64rem) {
        .container {
            max-width: 64rem
        }
    }

    @media (width>=80rem) {
        .container {
            max-width: 80rem
        }
    }

    @media (width>=96rem) {
        .container {
            max-width: 96rem
        }
    }

    .container {
        margin-inline: auto;
        padding-inline: 2rem
    }

    @media (width>=375px) {
        .container {
            max-width: none
        }
    }

    @media (width>=1400px) {
        .container {
            max-width: 1400px
        }
    }

    .mx-4 {
        margin-inline: calc(var(--spacing)*4)
    }

    .mx-auto {
        margin-inline: auto
    }

    .prose {
        color: #27272a;
        --tw-prose-body: oklch(.373 .034 259.733);
        --tw-prose-headings: oklch(.21 .034 264.665);
        --tw-prose-lead: oklch(.446 .03 256.802);
        --tw-prose-links: oklch(.21 .034 264.665);
        --tw-prose-bold: oklch(.21 .034 264.665);
        --tw-prose-counters: oklch(.551 .027 264.364);
        --tw-prose-bullets: oklch(.872 .01 258.338);
        --tw-prose-hr: oklch(.928 .006 264.531);
        --tw-prose-quotes: oklch(.21 .034 264.665);
        --tw-prose-quote-borders: oklch(.928 .006 264.531);
        --tw-prose-captions: oklch(.551 .027 264.364);
        --tw-prose-kbd: oklch(.21 .034 264.665);
        --tw-prose-kbd-shadows: NaN NaN NaN;
        --tw-prose-code: oklch(.21 .034 264.665);
        --tw-prose-pre-code: oklch(.928 .006 264.531);
        --tw-prose-pre-bg: oklch(.278 .033 256.848);
        --tw-prose-th-borders: oklch(.872 .01 258.338);
        --tw-prose-td-borders: oklch(.928 .006 264.531);
        --tw-prose-invert-body: oklch(.872 .01 258.338);
        --tw-prose-invert-headings: #fff;
        --tw-prose-invert-lead: oklch(.707 .022 261.325);
        --tw-prose-invert-links: #fff;
        --tw-prose-invert-bold: #fff;
        --tw-prose-invert-counters: oklch(.707 .022 261.325);
        --tw-prose-invert-bullets: oklch(.446 .03 256.802);
        --tw-prose-invert-hr: oklch(.373 .034 259.733);
        --tw-prose-invert-quotes: oklch(.967 .003 264.542);
        --tw-prose-invert-quote-borders: oklch(.373 .034 259.733);
        --tw-prose-invert-captions: oklch(.707 .022 261.325);
        --tw-prose-invert-kbd: #fff;
        --tw-prose-invert-kbd-shadows: 255 255 255;
        --tw-prose-invert-code: #fff;
        --tw-prose-invert-pre-code: oklch(.872 .01 258.338);
        --tw-prose-invert-pre-bg: #00000080;
        --tw-prose-invert-th-borders: oklch(.446 .03 256.802);
        --tw-prose-invert-td-borders: oklch(.373 .034 259.733);
        max-width: 42rem;
        font-size: 1rem;
        line-height: 1.75;
        font: inherit
    }

    .prose :where(p):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.25em;
        margin-bottom: 1.25em
    }

    .prose :where([class~=lead]):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-lead);
        margin-top: 1.2em;
        margin-bottom: 1.2em;
        font-size: 1.25em;
        line-height: 1.6
    }

    .prose :where(a):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-links);
        font-weight: 500;
        text-decoration: underline
    }

    .prose :where(strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-bold);
        font-weight: 600
    }

    .prose :where(a strong):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose :where(blockquote strong):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose :where(thead th strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: inherit
    }

    .prose :where(ol):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.25em;
        margin-bottom: 1.25em;
        padding-inline-start: 1.625em;
        list-style-type: decimal
    }

    .prose :where(ol[type=A]):not(:where([class~=not-prose], [class~=not-prose] *)) {
        list-style-type: upper-alpha
    }

    .prose :where(ol[type=a]):not(:where([class~=not-prose], [class~=not-prose] *)) {
        list-style-type: lower-alpha
    }

    .prose :where(ol[type=A s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
        list-style-type: upper-alpha
    }

    .prose :where(ol[type=a s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
        list-style-type: lower-alpha
    }

    .prose :where(ol[type=I]):not(:where([class~=not-prose], [class~=not-prose] *)) {
        list-style-type: upper-roman
    }

    .prose :where(ol[type=i]):not(:where([class~=not-prose], [class~=not-prose] *)) {
        list-style-type: lower-roman
    }

    .prose :where(ol[type=I s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
        list-style-type: upper-roman
    }

    .prose :where(ol[type=i s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
        list-style-type: lower-roman
    }

    .prose :where(ol[type="1"]):not(:where([class~=not-prose], [class~=not-prose] *)) {
        list-style-type: decimal
    }

    .prose :where(ul):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-start: 1.625em;
        margin-top: 1.25em;
        margin-bottom: 1.25em;
        padding-left: 1.5rem;
        list-style-type: disc
    }

    .prose :where(ol>li):not(:where([class~=not-prose], [class~=not-prose] *))::marker {
        color: var(--tw-prose-counters);
        font-weight: 400
    }

    .prose :where(ul>li):not(:where([class~=not-prose], [class~=not-prose] *))::marker {
        color: var(--tw-prose-bullets)
    }

    .prose :where(dt):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-headings);
        margin-top: 1.25em;
        font-weight: 600
    }

    .prose :where(hr):not(:where([class~=not-prose], [class~=not-prose] *)) {
        border-color: var(--tw-prose-hr);
        border-top-width: 1px;
        margin-top: 3em;
        margin-bottom: 3em
    }

    .prose :where(blockquote):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-quotes);
        border-inline-start-width: .25rem;
        border-inline-start-color: var(--tw-prose-quote-borders);
        quotes: "“" "”" "‘" "’";
        margin-top: 1.6em;
        margin-bottom: 1.6em;
        padding-inline-start: 1em;
        font-style: italic;
        font-weight: 500
    }

    .prose :where(blockquote p:first-of-type):not(:where([class~=not-prose], [class~=not-prose] *)):before {
        content: open-quote
    }

    .prose :where(blockquote p:last-of-type):not(:where([class~=not-prose], [class~=not-prose] *)):after {
        content: close-quote
    }

    .prose :where(h1):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-headings);
        margin-top: 0;
        margin-bottom: .888889em;
        font-size: 2.25em;
        font-weight: 800;
        line-height: 1.11111
    }

    .prose :where(h1 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: inherit;
        font-weight: 900
    }

    .prose :where(h2):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-headings);
        margin-top: 2em;
        margin-bottom: 1em;
        font-size: 1.5em;
        font-weight: 700;
        line-height: 1.33333
    }

    .prose :where(h2 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: inherit;
        font-weight: 800
    }

    .prose :where(h3):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-headings);
        margin-top: 1.6em;
        margin-bottom: .6em;
        font-size: 1.25em;
        font-weight: 600;
        line-height: 1.6
    }

    .prose :where(h3 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: inherit;
        font-weight: 700
    }

    .prose :where(h4):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-headings);
        margin-top: 1.5em;
        margin-bottom: .5em;
        font-weight: 600;
        line-height: 1.5
    }

    .prose :where(h4 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: inherit;
        font-weight: 700
    }

    .prose :where(img):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 2em;
        margin-bottom: 2em
    }

    .prose :where(picture):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 2em;
        margin-bottom: 2em;
        display: block
    }

    .prose :where(video):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 2em;
        margin-bottom: 2em
    }

    .prose :where(kbd):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-kbd);
        box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows)/10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows)/10%);
        padding-top: .1875em;
        padding-inline-end: .375em;
        padding-bottom: .1875em;
        border-radius: .3125rem;
        padding-inline-start: .375em;
        font-family: inherit;
        font-size: .875em;
        font-weight: 500
    }

    .prose :where(code):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-code);
        font-size: .875em;
        font-weight: 600
    }

    .prose :where(code):not(:where([class~=not-prose], [class~=not-prose] *)):after,
    .prose :where(code):not(:where([class~=not-prose], [class~=not-prose] *)):before {
        content: "`"
    }

    .prose :where(a code):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose :where(h1 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: inherit
    }

    .prose :where(h2 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: inherit;
        font-size: .875em
    }

    .prose :where(h3 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: inherit;
        font-size: .9em
    }

    .prose :where(blockquote code):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose :where(h4 code):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose :where(thead th code):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: inherit
    }

    .prose :where(pre):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-pre-code);
        background-color: var(--tw-prose-pre-bg);
        padding-top: .857143em;
        padding-inline-end: 1.14286em;
        padding-bottom: .857143em;
        border-radius: .375rem;
        margin-top: 1.71429em;
        margin-bottom: 1.71429em;
        padding-inline-start: 1.14286em;
        font-size: .875em;
        font-weight: 400;
        line-height: 1.71429;
        overflow-x: auto
    }

    .prose :where(pre code):not(:where([class~=not-prose], [class~=not-prose] *)) {
        font-weight: inherit;
        color: inherit;
        font-size: inherit;
        font-family: inherit;
        line-height: inherit;
        background-color: #0000;
        border-width: 0;
        border-radius: 0;
        padding: 0
    }

    .prose :where(pre code):not(:where([class~=not-prose], [class~=not-prose] *)):after,
    .prose :where(pre code):not(:where([class~=not-prose], [class~=not-prose] *)):before {
        content: none
    }

    .prose :where(table):not(:where([class~=not-prose], [class~=not-prose] *)) {
        table-layout: auto;
        text-align: start;
        width: 100%;
        margin-top: 2em;
        margin-bottom: 2em;
        font-size: .875em;
        line-height: 1.71429
    }

    .prose :where(thead):not(:where([class~=not-prose], [class~=not-prose] *)) {
        border-bottom-width: 1px;
        border-bottom-color: var(--tw-prose-th-borders)
    }

    .prose :where(thead th):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-headings);
        vertical-align: bottom;
        padding-inline-end: .571429em;
        padding-bottom: .571429em;
        padding-inline-start: .571429em;
        font-weight: 600
    }

    .prose :where(tbody tr):not(:where([class~=not-prose], [class~=not-prose] *)) {
        border-bottom-width: 1px;
        border-bottom-color: var(--tw-prose-td-borders)
    }

    .prose :where(tbody tr:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        border-bottom-width: 0
    }

    .prose :where(tbody td):not(:where([class~=not-prose], [class~=not-prose] *)) {
        vertical-align: baseline
    }

    .prose :where(tfoot):not(:where([class~=not-prose], [class~=not-prose] *)) {
        border-top-width: 1px;
        border-top-color: var(--tw-prose-th-borders)
    }

    .prose :where(tfoot td):not(:where([class~=not-prose], [class~=not-prose] *)) {
        vertical-align: top
    }

    .prose :where(figure>*):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 0;
        margin-bottom: 0
    }

    .prose :where(figcaption):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-captions);
        margin-top: .857143em;
        font-size: .875em;
        line-height: 1.42857
    }

    .prose :where(picture>img):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 0;
        margin-bottom: 0
    }

    .prose :where(li):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: .125rem;
        margin-bottom: .125rem
    }

    .prose :where(ol>li):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose :where(ul>li):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-start: .375em
    }

    .prose :where(.prose>ul>li p):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: .75em;
        margin-bottom: .75em
    }

    .prose :where(.prose>ul>li>:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.25em
    }

    .prose :where(.prose>ul>li>:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-bottom: 1.25em
    }

    .prose :where(.prose>ol>li>:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.25em
    }

    .prose :where(.prose>ol>li>:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-bottom: 1.25em
    }

    .prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: .75em;
        margin-bottom: .75em
    }

    .prose :where(dl):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.25em;
        margin-bottom: 1.25em
    }

    .prose :where(dd):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: .5em;
        padding-inline-start: 1.625em
    }

    .prose :where(h2+*):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose :where(h3+*):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose :where(h4+*):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose :where(hr+*):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 0
    }

    .prose :where(thead th:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-start: 0
    }

    .prose :where(thead th:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-end: 0
    }

    .prose :where(tbody td, tfoot td):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-top: .571429em;
        padding-inline-end: .571429em;
        padding-bottom: .571429em;
        padding-inline-start: .571429em
    }

    .prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-start: 0
    }

    .prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-end: 0
    }

    .prose :where(figure):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 2em;
        margin-bottom: 2em
    }

    .prose :where(.prose>:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 0
    }

    .prose :where(.prose>:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-bottom: 0
    }

    .prose :where(ul li):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-left: 0;
        padding-inline-start: 0
    }

    .prose :where(ul li):not(:where([class~=not-prose], [class~=not-prose] *))::marker {
        color: #b5b5ba
    }

    .prose :where(img:hover):not(:where([class~=not-prose], [class~=not-prose] *)) {
        outline: 2px solid #ff854d
    }

    .-mt-24 {
        margin-top: calc(var(--spacing)*-24)
    }

    .mt-2 {
        margin-top: calc(var(--spacing)*2)
    }

    .mt-4 {
        margin-top: calc(var(--spacing)*4)
    }

    .mt-6 {
        margin-top: calc(var(--spacing)*6)
    }

    .mt-16 {
        margin-top: calc(var(--spacing)*16)
    }

    .mb-2 {
        margin-bottom: calc(var(--spacing)*2)
    }

    .ml-6 {
        margin-left: calc(var(--spacing)*6)
    }

    .flex {
        display: flex
    }

    .grid {
        display: grid
    }

    .hidden {
        display: none
    }

    .inline-flex {
        display: inline-flex
    }

    .h-10 {
        height: calc(var(--spacing)*10)
    }

    .h-\[24px\] {
        height: 24px
    }

    .h-\[2px\] {
        height: 2px
    }

    .h-auto {
        height: auto
    }

    .h-fit {
        height: fit-content
    }

    .h-full {
        height: 100%
    }

    .max-h-\[480px\] {
        max-height: 480px
    }

    .min-h-\[40px\] {
        min-height: 40px
    }

    .min-h-\[88px\] {
        min-height: 88px
    }

    .min-h-screen {
        min-height: 100vh
    }

    .w-10 {
        width: calc(var(--spacing)*10)
    }

    .w-\[24px\] {
        width: 24px
    }

    .w-fit {
        width: fit-content
    }

    .w-full {
        width: 100%
    }

    .max-w-2xl {
        max-width: var(--container-2xl)
    }

    .max-w-4xl {
        max-width: var(--container-4xl)
    }

    .max-w-\[400px\] {
        max-width: 400px
    }

    .max-w-\[560px\] {
        max-width: 560px
    }

    .min-w-9 {
        min-width: calc(var(--spacing)*9)
    }

    .min-w-sm {
        min-width: var(--container-sm)
    }

    .min-w-xl {
        min-width: var(--container-xl)
    }

    .flex-1 {
        flex: 1
    }

    .grow {
        flex-grow: 1
    }

    .-translate-x-1\/2 {
        --tw-translate-x: calc(calc(1/2*100%)*-1);
        translate: var(--tw-translate-x)var(--tw-translate-y)
    }

    .scale-95 {
        --tw-scale-x: 95%;
        --tw-scale-y: 95%;
        --tw-scale-z: 95%;
        scale: var(--tw-scale-x)var(--tw-scale-y)
    }

    .-rotate-4 {
        rotate: -4deg
    }

    .-rotate-8 {
        rotate: -8deg
    }

    .rotate-2 {
        rotate: 2deg
    }

    .rotate-4 {
        rotate: 4deg
    }

    .transform {
        transform: var(--tw-rotate-x)var(--tw-rotate-y)var(--tw-rotate-z)var(--tw-skew-x)var(--tw-skew-y)
    }

    .cursor-zoom-in {
        cursor: zoom-in
    }

    .columns-1 {
        column-count: 1
    }

    .break-inside-avoid {
        break-inside: avoid
    }

    .flex-col {
        flex-direction: column
    }

    .flex-row {
        flex-direction: row
    }

    .flex-wrap {
        flex-wrap: wrap
    }

    .items-center {
        align-items: center
    }

    .items-end {
        align-items: flex-end
    }

    .items-start {
        align-items: flex-start
    }

    .justify-between {
        justify-content: space-between
    }

    .justify-center {
        justify-content: center
    }

    .gap-1 {
        gap: calc(var(--spacing)*1)
    }

    .gap-1\.5 {
        gap: calc(var(--spacing)*1.5)
    }

    .gap-2 {
        gap: calc(var(--spacing)*2)
    }

    .gap-3 {
        gap: calc(var(--spacing)*3)
    }

    .gap-4 {
        gap: calc(var(--spacing)*4)
    }

    .gap-6 {
        gap: calc(var(--spacing)*6)
    }

    .gap-8 {
        gap: calc(var(--spacing)*8)
    }

    .gap-16 {
        gap: calc(var(--spacing)*16)
    }

    :where(.space-y-4>:not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing)*4)*var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing)*4)*calc(1 - var(--tw-space-y-reverse)))
    }

    .overflow-hidden {
        overflow: hidden
    }

    .scroll-smooth {
        scroll-behavior: smooth
    }

    .rounded-2xl {
        border-radius: var(--radius-2xl)
    }

    .rounded-full {
        border-radius: 3.40282e+38px
    }

    .rounded-lg {
        border-radius: var(--radius-lg)
    }

    .rounded-md {
        border-radius: var(--radius-md)
    }

    .rounded-sm {
        border-radius: var(--radius-sm)
    }

    .rounded-xl {
        border-radius: var(--radius-xl)
    }

    .rounded-t-2xl {
        border-top-left-radius: var(--radius-2xl);
        border-top-right-radius: var(--radius-2xl)
    }

    .rounded-t-xl {
        border-top-left-radius: var(--radius-xl);
        border-top-right-radius: var(--radius-xl)
    }

    .rounded-tl-2xl {
        border-top-left-radius: var(--radius-2xl)
    }

    .rounded-br-2xl {
        border-bottom-right-radius: var(--radius-2xl)
    }

    .border {
        border-style: var(--tw-border-style);
        border-width: 1px
    }

    .border-2 {
        border-style: var(--tw-border-style);
        border-width: 2px
    }

    .border-card {
        border-color: var(--color-border-card)
    }

    .border-neutral-300 {
        border-color: #d5d5d8
    }

    .bg-default {
        background-color: var(--color-bg-default)
    }

    .bg-default\/80 {
        background-color: color-mix(in oklab, var(--color-bg-default)80%, transparent)
    }

    .bg-neutral-200 {
        background-color: #e5e5e6
    }

    .bg-orange-600 {
        background-color: var(--color-brand-primary)
    }

    .bg-red-700 {
        background-color: #c4222a
    }

    .bg-retro-100 {
        background-color: #efeeeb
    }

    .bg-surface {
        background-color: var(--color-bg-surface)
    }

    .bg-white {
        background-color: #fff
    }

    .bg-linear-to-t {
        --tw-gradient-position: to top in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops))
    }

    .bg-none {
        background-image: none
    }

    .from-white {
        --tw-gradient-from: #fff;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .from-white\/0 {
        --tw-gradient-from: oklab(0% 0 0/0);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .from-0\% {
        --tw-gradient-from-position: 0%
    }

    .from-80\% {
        --tw-gradient-from-position: 80%
    }

    .to-white {
        --tw-gradient-to: #fff;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .to-10\% {
        --tw-gradient-to-position: 10%
    }

    .to-100\% {
        --tw-gradient-to-position: 100%
    }

    .fill-ui-decoration {
        fill: var(--color-ui-decoration)
    }

    .object-cover {
        object-fit: cover
    }

    .p-1 {
        padding: calc(var(--spacing)*1)
    }

    .p-2 {
        padding: calc(var(--spacing)*2)
    }

    .p-4 {
        padding: calc(var(--spacing)*4)
    }

    .p-6 {
        padding: calc(var(--spacing)*6)
    }

    .px-2 {
        padding-inline: calc(var(--spacing)*2)
    }

    .px-3 {
        padding-inline: calc(var(--spacing)*3)
    }

    .px-4 {
        padding-inline: calc(var(--spacing)*4)
    }

    .px-5 {
        padding-inline: calc(var(--spacing)*5)
    }

    .px-6 {
        padding-inline: calc(var(--spacing)*6)
    }

    .py-1 {
        padding-block: calc(var(--spacing)*1)
    }

    .py-2 {
        padding-block: calc(var(--spacing)*2)
    }

    .py-3 {
        padding-block: calc(var(--spacing)*3)
    }

    .py-4 {
        padding-block: calc(var(--spacing)*4)
    }

    .pt-0 {
        padding-top: calc(var(--spacing)*0)
    }

    .pt-4 {
        padding-top: calc(var(--spacing)*4)
    }

    .pt-6 {
        padding-top: calc(var(--spacing)*6)
    }

    .pt-8 {
        padding-top: calc(var(--spacing)*8)
    }

    .pt-20 {
        padding-top: calc(var(--spacing)*20)
    }

    .pr-1\.5 {
        padding-right: calc(var(--spacing)*1.5)
    }

    .pr-14 {
        padding-right: calc(var(--spacing)*14)
    }

    .pb-8 {
        padding-bottom: calc(var(--spacing)*8)
    }

    .pb-24 {
        padding-bottom: calc(var(--spacing)*24)
    }

    .pl-1 {
        padding-left: calc(var(--spacing)*1)
    }

    .pl-14 {
        padding-left: calc(var(--spacing)*14)
    }

    .text-center {
        text-align: center
    }

    .font-mono {
        font-family: DM Mono, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace
    }

    .font-sans {
        font-family: Manrope, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, sans-serif
    }

    .text-2xl {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height))
    }

    .text-6xl {
        font-size: var(--text-6xl);
        line-height: var(--tw-leading, var(--text-6xl--line-height))
    }

    .text-base {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height))
    }

    .text-lg {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height))
    }

    .text-sm {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height))
    }

    .text-xl {
        font-size: var(--text-xl);
        line-height: var(--tw-leading, var(--text-xl--line-height))
    }

    .text-xs {
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height))
    }

    .leading-none {
        --tw-leading: 1;
        line-height: 1
    }

    .font-\[200\] {
        --tw-font-weight: 200;
        font-weight: 200
    }

    .font-bold {
        --tw-font-weight: 700;
        font-weight: 700
    }

    .font-medium {
        --tw-font-weight: 500;
        font-weight: 500
    }

    .whitespace-nowrap {
        white-space: nowrap
    }

    .text-accent {
        color: var(--color-text-accent)
    }

    .text-green-800 {
        color: #2e8a49
    }

    .text-neutral-400 {
        color: #c5c5c9
    }

    .text-neutral-500 {
        color: #b5b5ba
    }

    .text-neutral-700 {
        color: #85858e
    }

    .text-neutral-900 {
        color: #27272a
    }

    .text-primary {
        color: var(--color-text-primary)
    }

    .text-red-600 {
        color: #dc343b
    }

    .text-secondary {
        color: var(--color-text-secondary)
    }

    .text-white {
        color: #fff
    }

    .underline {
        text-decoration-line: underline
    }

    .inset-shadow-xs {
        --tw-inset-shadow: inset 0 1px 1px var(--tw-inset-shadow-color, #0000000d)
    }

    .inset-shadow-xs,
    .shadow-\[inset_0px_-2px_0px_0px_rgba\(224\,71\,0\,1\.00\)\] {
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }

    .shadow-\[inset_0px_-2px_0px_0px_rgba\(224\,71\,0\,1\.00\)\] {
        --tw-shadow: inset 0px -2px 0px 0px var(--tw-shadow-color, #e04700)
    }

    .shadow-button-danger-rest {
        --tw-shadow: 0px -3px 0px 0px var(--tw-shadow-color, #5c1d00)inset, -2px 0px 0px 0px var(--tw-shadow-color, #ffffff29)inset, 2px 0px 0px 0px var(--tw-shadow-color, #ffffff29)inset, 0px 2px 4px -2px var(--tw-shadow-color, #19191a1a), 0px 2px 0px 0px var(--tw-shadow-color, #ffffff29)inset
    }

    .shadow-button-danger-rest,
    .shadow-button-primary-rest {
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }

    .shadow-button-primary-rest {
        --tw-shadow: 0px 2px 0px 0px var(--tw-shadow-color, #ffffff29)inset, -2px 0px 0px 0px var(--tw-shadow-color, #ffffff29)inset, 2px 0px 0px 0px var(--tw-shadow-color, #ffffff29)inset, 0px -3px 0px 1px var(--tw-shadow-color, #19191a)inset, 0px 1px 0px 1px var(--tw-shadow-color, #19191a)inset, 0px 2px 4px -2px var(--tw-shadow-color, #19191a1a)
    }

    .shadow-button-secondary-rest {
        --tw-shadow: 0px 2px 4px -2px var(--tw-shadow-color, #19191a0d), 0px -3px 0px 0px var(--tw-shadow-color, #cfccc3)inset, 0px 2px 0px 0px var(--tw-shadow-color, #dfddd7)inset, 2px 0px 0px 0px var(--tw-shadow-color, #dfddd7)inset, -2px 0px 0px 0px var(--tw-shadow-color, #dfddd7)inset
    }

    .shadow-button-secondary-rest,
    .shadow-md {
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }

    .shadow-md {
        --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px -2px var(--tw-shadow-color, #0000001a)
    }

    .shadow-sm {
        --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a)
    }

    .shadow-sm,
    .shadow-xs {
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }

    .shadow-xs {
        --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, #0000000d)
    }

    .ring-offset-white {
        --tw-ring-offset-color: #fff
    }

    .outline {
        outline-width: 1px
    }

    .outline,
    .outline-2 {
        outline-style: var(--tw-outline-style)
    }

    .outline-2 {
        outline-width: 2px
    }

    .outline-retro-50 {
        outline-color: #f8f8f6
    }

    .filter {
        filter: var(--tw-blur, )var(--tw-brightness, )var(--tw-contrast, )var(--tw-grayscale, )var(--tw-hue-rotate, )var(--tw-invert, )var(--tw-saturate, )var(--tw-sepia, )var(--tw-drop-shadow, )
    }

    .backdrop-blur-xs {
        --tw-backdrop-blur: blur(var(--blur-xs));
        -webkit-backdrop-filter: var(--tw-backdrop-blur, )var(--tw-backdrop-brightness, )var(--tw-backdrop-contrast, )var(--tw-backdrop-grayscale, )var(--tw-backdrop-hue-rotate, )var(--tw-backdrop-invert, )var(--tw-backdrop-opacity, )var(--tw-backdrop-saturate, )var(--tw-backdrop-sepia, );
        backdrop-filter: var(--tw-backdrop-blur, )var(--tw-backdrop-brightness, )var(--tw-backdrop-contrast, )var(--tw-backdrop-grayscale, )var(--tw-backdrop-hue-rotate, )var(--tw-backdrop-invert, )var(--tw-backdrop-opacity, )var(--tw-backdrop-saturate, )var(--tw-backdrop-sepia, )
    }

    .transition {
        transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration))
    }

    .transition-colors {
        transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration))
    }

    .transition-transform {
        transition-property: transform, translate, scale, rotate;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration))
    }

    .duration-300 {
        --tw-duration: .3s;
        transition-duration: .3s
    }

    .ease-out {
        --tw-ease: var(--ease-out);
        transition-timing-function: var(--ease-out)
    }

    .will-change-transform {
        will-change: transform
    }

    .\[column-fill\:_balance\] {
        column-fill: balance
    }

    .bg-button-primary {
        background: linear-gradient(#fff0 50%, #ffffff1f), #27272a
    }

    .duration-300 {
        animation-duration: .3s
    }

    .ease-out {
        animation-timing-function: cubic-bezier(0, 0, .2, 1)
    }

    @media (hover:hover) {
        .group-hover\:text-accent:is(:where(.group):hover *) {
            color: var(--color-text-accent)
        }
    }

    .peer-disabled\:cursor-not-allowed:is(:where(.peer):disabled~*) {
        cursor: not-allowed
    }

    .peer-disabled\:opacity-70:is(:where(.peer):disabled~*) {
        opacity: .7
    }

    .file\:border-0::file-selector-button {
        border-style: var(--tw-border-style);
        border-width: 0
    }

    .file\:bg-transparent::file-selector-button {
        background-color: #0000
    }

    .file\:text-sm::file-selector-button {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height))
    }

    .file\:font-medium::file-selector-button {
        --tw-font-weight: 500;
        font-weight: 500
    }

    .placeholder\:text-neutral-500::placeholder {
        color: #b5b5ba
    }

    .before\:absolute:before {
        content: var(--tw-content);
        position: absolute
    }

    .before\:top-0:before {
        content: var(--tw-content);
        top: calc(var(--spacing)*0)
    }

    .before\:right-0:before {
        content: var(--tw-content);
        right: calc(var(--spacing)*0)
    }

    .before\:bottom-0:before {
        content: var(--tw-content);
        bottom: calc(var(--spacing)*0)
    }

    .before\:left-0:before {
        content: var(--tw-content);
        left: calc(var(--spacing)*0)
    }

    .before\:block:before {
        content: var(--tw-content);
        display: block
    }

    .before\:rounded-lg:before {
        content: var(--tw-content);
        border-radius: var(--radius-lg)
    }

    .before\:bg-linear-to-t:before {
        content: var(--tw-content);
        --tw-gradient-position: to top in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops))
    }

    .before\:from-special-shine:before {
        content: var(--tw-content);
        --tw-gradient-from: #ffffff0a;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .before\:from-0\%:before {
        content: var(--tw-content);
        --tw-gradient-from-position: 0%
    }

    .before\:to-25\%:before {
        content: var(--tw-content);
        --tw-gradient-to-position: 25%
    }

    @media (hover:hover) {
        .hover\:scale-100:hover {
            --tw-scale-x: 100%;
            --tw-scale-y: 100%;
            --tw-scale-z: 100%;
            scale: var(--tw-scale-x)var(--tw-scale-y)
        }

        .hover\:scale-102:hover {
            --tw-scale-x: 102%;
            --tw-scale-y: 102%;
            --tw-scale-z: 102%;
            scale: var(--tw-scale-x)var(--tw-scale-y)
        }

        .hover\:rotate-0:hover {
            rotate: none
        }

        .hover\:cursor-pointer:hover {
            cursor: pointer
        }

        .hover\:border-card-hover:hover {
            border-color: var(--color-border-card-hover)
        }

        .hover\:text-accent:hover {
            color: var(--color-text-accent)
        }

        .hover\:text-primary:hover {
            color: var(--color-text-primary)
        }

        .hover\:no-underline:hover {
            text-decoration-line: none
        }

        .hover\:underline:hover {
            text-decoration-line: underline
        }

        .hover\:outline-2:hover {
            outline-style: var(--tw-outline-style);
            outline-width: 2px
        }

        .hover\:outline-orange-500:hover {
            outline-color: #ff854d
        }

        .hover\:outline-solid:hover {
            --tw-outline-style: solid;
            outline-style: solid
        }

        .hover\:before\:bg-special-state-hover:hover:before {
            content: var(--tw-content);
            background-color: #27272a0a
        }

        .hover\:before\:bg-special-state-hover-inverse:hover:before {
            content: var(--tw-content);
            background-color: #ffffff1f
        }
    }

    .focus\:border-neutral-900:focus {
        border-color: #27272a
    }

    .active\:scale-\[99\%\]:active {
        scale: 99%
    }

    .active\:transform:active {
        transform: var(--tw-rotate-x)var(--tw-rotate-y)var(--tw-rotate-z)var(--tw-skew-x)var(--tw-skew-y)
    }

    .active\:shadow-none:active {
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }

    .active\:transition-transform:active {
        transition-property: transform, translate, scale, rotate;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration))
    }

    .active\:duration-75:active {
        --tw-duration: 75ms;
        transition-duration: 75ms
    }

    .active\:ease-in-out:active {
        --tw-ease: var(--ease-in-out);
        transition-timing-function: var(--ease-in-out)
    }

    .active\:duration-75:active {
        animation-duration: 75ms
    }

    .active\:ease-in-out:active {
        animation-timing-function: cubic-bezier(.4, 0, .2, 1)
    }

    .disabled\:pointer-events-none:disabled {
        pointer-events: none
    }

    .disabled\:cursor-not-allowed:disabled {
        cursor: not-allowed
    }

    .disabled\:bg-neutral-100:disabled {
        background-color: #f2f2f3
    }

    .disabled\:text-neutral-500:disabled {
        color: #b5b5ba
    }

    .disabled\:opacity-50:disabled {
        opacity: .5
    }

    .disabled\:shadow-none:disabled {
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }

    @media (width>=375px) {
        .xs\:top-5 {
            top: calc(var(--spacing)*5)
        }

        .xs\:top-8 {
            top: calc(var(--spacing)*8)
        }

        .xs\:left-3 {
            left: calc(var(--spacing)*3)
        }

        .xs\:left-12 {
            left: calc(var(--spacing)*12)
        }

        .xs\:text-3xl {
            font-size: var(--text-3xl);
            line-height: var(--tw-leading, var(--text-3xl--line-height))
        }
    }

    @media (width>=40rem) {
        .sm\:sticky {
            position: sticky
        }

        .sm\:mt-6 {
            margin-top: calc(var(--spacing)*6)
        }

        .sm\:ml-0 {
            margin-left: calc(var(--spacing)*0)
        }

        .sm\:grid {
            display: grid
        }

        .sm\:grid-cols-2 {
            grid-template-columns: repeat(2, minmax(0, 1fr))
        }

        .sm\:grid-rows-\[480px_480px_480px_320px\] {
            grid-template-rows: 480px 480px 480px 320px
        }

        .sm\:gap-2 {
            gap: calc(var(--spacing)*2)
        }

        .sm\:gap-4 {
            gap: calc(var(--spacing)*4)
        }

        .sm\:rounded-lg {
            border-radius: var(--radius-lg)
        }

        .sm\:to-25\% {
            --tw-gradient-to-position: 25%
        }

        .sm\:p-4 {
            padding: calc(var(--spacing)*4)
        }

        .sm\:p-6 {
            padding: calc(var(--spacing)*6)
        }

        .sm\:px-6 {
            padding-inline: calc(var(--spacing)*6)
        }

        .sm\:pb-8 {
            padding-bottom: calc(var(--spacing)*8)
        }
    }

    @media (width>=48rem) {
        .md\:flex {
            display: flex
        }

        .md\:hidden {
            display: none
        }

        .md\:columns-2 {
            column-count: 2
        }

        .md\:p-12 {
            padding: calc(var(--spacing)*12)
        }

        .md\:px-12 {
            padding-inline: calc(var(--spacing)*12)
        }

        .md\:text-lg {
            font-size: var(--text-lg);
            line-height: var(--tw-leading, var(--text-lg--line-height))
        }
    }

    @media (width>=64rem) {
        .lg\:block {
            display: block
        }

        .lg\:flex-row {
            flex-direction: row
        }

        .lg\:gap-2 {
            gap: calc(var(--spacing)*2)
        }
    }

    @media (width>=80rem) {
        .xl\:p-8 {
            padding: calc(var(--spacing)*8)
        }

        .xl\:px-8 {
            padding-inline: calc(var(--spacing)*8)
        }
    }

    @media (hover:hover) {
        .dark\:hover\:before\:bg-special-state-hover-inverse:is(.dark *):hover:before {
            content: var(--tw-content);
            background-color: #ffffff1f
        }
    }

    .prose-h1\:text-2xl :where(h1):not(:where([class~=not-prose], [class~=not-prose] *)) {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height))
    }

    .prose-h2\:mb-2 :where(h2):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-bottom: calc(var(--spacing)*2)
    }

    .prose-h2\:text-xl :where(h2):not(:where([class~=not-prose], [class~=not-prose] *)) {
        font-size: var(--text-xl);
        line-height: var(--tw-leading, var(--text-xl--line-height))
    }

    .prose-h3\:mb-3 :where(h3):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-bottom: calc(var(--spacing)*3)
    }

    .prose-h3\:text-lg :where(h3):not(:where([class~=not-prose], [class~=not-prose] *)) {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height))
    }

    .prose-p\:mt-0 :where(p):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: calc(var(--spacing)*0)
    }

    .prose-p\:mb-3 :where(p):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-bottom: calc(var(--spacing)*3)
    }

    .prose-p\:text-base :where(p):not(:where([class~=not-prose], [class~=not-prose] *)) {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height))
    }

    .prose-a\:text-accent :where(a):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--color-text-accent)
    }

    .prose-a\:underline :where(a):not(:where([class~=not-prose], [class~=not-prose] *)) {
        text-decoration-line: underline
    }

    .prose-ul\:mt-0 :where(ul):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: calc(var(--spacing)*0)
    }

    .prose-ul\:mb-3 :where(ul):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-bottom: calc(var(--spacing)*3)
    }

    .prose-li\:mt-0 :where(li):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: calc(var(--spacing)*0)
    }

    .prose-li\:mb-3 :where(li):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-bottom: calc(var(--spacing)*3)
    }

    .prose-img\:my-3 :where(img):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-block: calc(var(--spacing)*3)
    }
}

@keyframes enter {
    0% {
        opacity: var(--tw-enter-opacity, 1);
        transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0)scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1))rotate(var(--tw-enter-rotate, 0))
    }
}

@keyframes exit {
    to {
        opacity: var(--tw-exit-opacity, 1);
        transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0)scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1))rotate(var(--tw-exit-rotate, 0))
    }
}

@keyframes spin {
    to {
        transform: rotate(1turn)
    }
}

@keyframes ping {

    75%,
    to {
        opacity: 0;
        transform: scale(2)
    }
}

@keyframes pulse {
    50% {
        opacity: .5
    }
}

@keyframes bounce {

    0%,
    to {
        animation-timing-function: cubic-bezier(.8, 0, 1, 1);
        transform: translateY(-25%)
    }

    50% {
        animation-timing-function: cubic-bezier(0, 0, .2, 1);
        transform: none
    }
}

@keyframes accordion-down {
    0% {
        height: 0
    }

    to {
        height: var(--radix-accordion-content-height)
    }
}

@keyframes accordion-up {
    0% {
        height: var(--radix-accordion-content-height)
    }

    to {
        height: 0
    }
}

@property --tw-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-translate-z {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-scale-x {
    syntax: "*";
    inherits: false;
    initial-value: 1
}

@property --tw-scale-y {
    syntax: "*";
    inherits: false;
    initial-value: 1
}

@property --tw-scale-z {
    syntax: "*";
    inherits: false;
    initial-value: 1
}

@property --tw-rotate-x {
    syntax: "*";
    inherits: false;
    initial-value: rotateX(0)
}

@property --tw-rotate-y {
    syntax: "*";
    inherits: false;
    initial-value: rotateY(0)
}

@property --tw-rotate-z {
    syntax: "*";
    inherits: false;
    initial-value: rotateZ(0)
}

@property --tw-skew-x {
    syntax: "*";
    inherits: false;
    initial-value: skewX(0)
}

@property --tw-skew-y {
    syntax: "*";
    inherits: false;
    initial-value: skewY(0)
}

@property --tw-space-y-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-border-style {
    syntax: "*";
    inherits: false;
    initial-value: solid
}

@property --tw-gradient-position {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-from {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000
}

@property --tw-gradient-via {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000
}

@property --tw-gradient-to {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000
}

@property --tw-gradient-stops {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-via-stops {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-from-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 0
}

@property --tw-gradient-via-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 50%
}

@property --tw-gradient-to-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 100%
}

@property --tw-leading {
    syntax: "*";
    inherits: false
}

@property --tw-font-weight {
    syntax: "*";
    inherits: false
}

@property --tw-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-inset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-inset-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-ring-color {
    syntax: "*";
    inherits: false
}

@property --tw-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-inset-ring-color {
    syntax: "*";
    inherits: false
}

@property --tw-inset-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-ring-inset {
    syntax: "*";
    inherits: false
}

@property --tw-ring-offset-width {
    syntax: "<length>";
    inherits: false;
    initial-value: 0
}

@property --tw-ring-offset-color {
    syntax: "*";
    inherits: false;
    initial-value: #fff
}

@property --tw-ring-offset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-outline-style {
    syntax: "*";
    inherits: false;
    initial-value: solid
}

@property --tw-blur {
    syntax: "*";
    inherits: false
}

@property --tw-brightness {
    syntax: "*";
    inherits: false
}

@property --tw-contrast {
    syntax: "*";
    inherits: false
}

@property --tw-grayscale {
    syntax: "*";
    inherits: false
}

@property --tw-hue-rotate {
    syntax: "*";
    inherits: false
}

@property --tw-invert {
    syntax: "*";
    inherits: false
}

@property --tw-opacity {
    syntax: "*";
    inherits: false
}

@property --tw-saturate {
    syntax: "*";
    inherits: false
}

@property --tw-sepia {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-blur {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-brightness {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-contrast {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-grayscale {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-hue-rotate {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-invert {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-opacity {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-saturate {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-sepia {
    syntax: "*";
    inherits: false
}

@property --tw-duration {
    syntax: "*";
    inherits: false
}

@property --tw-ease {
    syntax: "*";
    inherits: false
}

@property --tw-content {
    syntax: "*";
    inherits: false;
    initial-value: ""
}